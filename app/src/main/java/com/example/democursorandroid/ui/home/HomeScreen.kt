package com.example.democursorandroid.ui.home

import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.shape.CircleShape
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.*
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.vector.ImageVector
import androidx.compose.ui.res.colorResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.democursorandroid.R
import com.example.democursorandroid.ui.theme.DemoCursorAndroidTheme

@Composable
fun HomeScreen(
    onNavigateToAirConditioner: () -> Unit = {}
) {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(colorResource(id = R.color.dark_gray))
    ) {
        // „Ç¢„Éó„É™„Éò„ÉÉ„ÉÄ„Éº
        AppHeader()
        
        // Ëªä‰∏°ÁîªÂÉèË°®Á§∫„Ç®„É™„Ç¢
        VehicleImageArea()
        
        // Ëªä‰∏°„Çπ„ÉÜ„Éº„Çø„ÇπÊÉÖÂ†±
        VehicleStatusInfo()
        
        // Ëªä‰∏°ÊÉÖÂ†±„Éú„Çø„É≥
        VehicleInfoButton()
        
        // Ë≠¶Âëä„É°„ÉÉ„Çª„Éº„Ç∏
        WarningMessage()
        
        // „É™„É¢„Éº„Éà„Çµ„Éº„Éì„Çπ
        RemoteServices(
            onNavigateToAirConditioner = onNavigateToAirConditioner
        )
        
        Spacer(modifier = Modifier.weight(1f))
        
        // „Éú„Éà„É†„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥
        BottomNavigation()
    }
}

@Composable
fun AppHeader() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .height(56.dp)
            .background(colorResource(id = R.color.dark_gray))
            .padding(horizontal = 16.dp),
        verticalAlignment = Alignment.CenterVertically
    ) {
        // „Éà„É®„Çø„É≠„Ç¥ÔºàËµ§Ëâ≤ÂÜÜÂΩ¢„ÄÅÁôΩ„ÅÑ„Éà„É®„Çø„Ç®„É≥„Éñ„É¨„É†Ôºâ
        Box(
            modifier = Modifier
                .size(32.dp)
                .clip(CircleShape)
                .background(colorResource(id = R.color.toyota_red)),
            contentAlignment = Alignment.Center
        ) {
            Text(
                text = "T",
                color = Color.White,
                fontSize = 16.sp,
                fontWeight = FontWeight.Bold
            )
        }
        
        Spacer(modifier = Modifier.width(12.dp))
        
        // ËªäÁ®ÆÈÅ∏Êäû„Éú„Çø„É≥
        Row(
            modifier = Modifier.weight(1f),
            verticalAlignment = Alignment.CenterVertically
        ) {
            Text(
                text = "„Éè„É™„Ç¢„Éº „Éè„Ç§„Éñ„É™„ÉÉ„Éâ",
                color = Color.White,
                fontSize = 16.sp,
                fontWeight = FontWeight.Medium
            )
            Spacer(modifier = Modifier.width(4.dp))
            Icon(
                imageVector = Icons.Default.Add,
                contentDescription = "ËªäÁ®ÆÈÅ∏Êäû",
                tint = Color.White,
                modifier = Modifier.size(20.dp)
            )
        }
        
        // „Éè„É≥„Éê„Éº„Ç¨„Éº„É°„Éã„É•„Éº„Ç¢„Ç§„Ç≥„É≥
        Icon(
            imageVector = Icons.Default.Add,
            contentDescription = "„É°„Éã„É•„Éº",
            tint = Color.White,
            modifier = Modifier.size(24.dp)
        )
    }
}

@Composable
fun VehicleImageArea() {
    Box(
        modifier = Modifier
            .fillMaxWidth()
            .aspectRatio(1.67f) // ÁîªÈù¢ÂπÖ„ÅÆ60%„ÅÆÈ´ò„Åï
            .background(colorResource(id = R.color.dark_gray))
    ) {
        // Ëªä‰∏°ÁîªÂÉè„ÅÆ„Éó„É¨„Éº„Çπ„Éõ„É´„ÉÄ„Éº
        Box(
            modifier = Modifier
                .fillMaxSize()
                .padding(32.dp),
            contentAlignment = Alignment.Center
        ) {
            Text(
                text = "üöó",
                fontSize = 120.sp,
                textAlign = TextAlign.Center
            )
        }
        
        // ÁîªÂÉè„ÇÆ„É£„É©„É™„Éº„Ç¢„Ç§„Ç≥„É≥
        IconButton(
            onClick = { /* ÁîªÂÉè„ÇÆ„É£„É©„É™„ÉºË°®Á§∫ */ },
            modifier = Modifier
                .align(Alignment.BottomEnd)
                .padding(16.dp)
        ) {
            Icon(
                imageVector = Icons.Default.Add,
                contentDescription = "ÁîªÂÉè„ÇÆ„É£„É©„É™„Éº",
                tint = Color.White,
                modifier = Modifier.size(24.dp)
            )
        }
    }
}

@Composable
fun VehicleStatusInfo() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .height(120.dp)
            .background(colorResource(id = R.color.dark_gray))
            .padding(horizontal = 16.dp),
        horizontalArrangement = Arrangement.SpaceBetween,
        verticalAlignment = Alignment.CenterVertically
    ) {
        // Ëà™Á∂öÂèØËÉΩË∑ùÈõ¢
        Column(
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Text(
                text = "Ëà™Á∂öÂèØËÉΩË∑ùÈõ¢",
                color = Color.White,
                fontSize = 14.sp
            )
            Spacer(modifier = Modifier.height(4.dp))
            Text(
                text = "146km",
                color = Color.White,
                fontSize = 24.sp,
                fontWeight = FontWeight.Bold
            )
        }
        
        // ÁáÉÊñô„Ç≤„Éº„Ç∏
        Column(
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Box(
                modifier = Modifier.size(80.dp),
                contentAlignment = Alignment.Center
            ) {
                // ÂçäÂÜÜÂΩ¢„Ç≤„Éº„Ç∏„ÅÆ„Éó„É¨„Éº„Çπ„Éõ„É´„ÉÄ„Éº
                Text(
                    text = "‚õΩ",
                    fontSize = 32.sp
                )
            }
            Row(
                modifier = Modifier.width(80.dp),
                horizontalArrangement = Arrangement.SpaceBetween
            ) {
                Text(
                    text = "E",
                    color = Color.White,
                    fontSize = 12.sp
                )
                Text(
                    text = "F",
                    color = Color.White,
                    fontSize = 12.sp
                )
            }
        }
        
        // Á∑èËµ∞Ë°åË∑ùÈõ¢
        Column(
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Text(
                text = "Á∑èËµ∞Ë°åË∑ùÈõ¢",
                color = Color.White,
                fontSize = 14.sp
            )
            Spacer(modifier = Modifier.height(4.dp))
            Text(
                text = "6,395km",
                color = Color.White,
                fontSize = 24.sp,
                fontWeight = FontWeight.Bold
            )
        }
    }
}

@Composable
fun VehicleInfoButton() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .height(44.dp)
            .background(colorResource(id = R.color.dark_gray))
            .padding(horizontal = 16.dp),
        verticalAlignment = Alignment.CenterVertically
    ) {
        Text(
            text = "‚ë† „ÇØ„É´„Éû„ÅÆÊÉÖÂ†±",
            color = Color.White,
            fontSize = 16.sp,
            fontWeight = FontWeight.Medium
        )
        Spacer(modifier = Modifier.width(8.dp))
        Icon(
            imageVector = Icons.Default.Add,
            contentDescription = "Ëªä‰∏°ÊÉÖÂ†±",
            tint = Color.White,
            modifier = Modifier.size(20.dp)
        )
    }
}

@Composable
fun WarningMessage() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .height(48.dp)
            .background(colorResource(id = R.color.dark_gray))
            .padding(horizontal = 16.dp),
        verticalAlignment = Alignment.CenterVertically
    ) {
        Icon(
            imageVector = Icons.Default.Add,
            contentDescription = "Ë≠¶Âëä",
            tint = colorResource(id = R.color.warning_yellow),
            modifier = Modifier.size(20.dp)
        )
        Spacer(modifier = Modifier.width(8.dp))
        Text(
            text = "„Ç™„Éº„Éà„Ç¢„É©„Éº„É†„ÅåOFF„Å´„Å™„Å£„Å¶„ÅÑ„Åæ„Åô",
            color = Color.White,
            fontSize = 14.sp,
            modifier = Modifier.weight(1f)
        )
        Icon(
            imageVector = Icons.Default.Add,
            contentDescription = "Ë©≥Á¥∞",
            tint = Color.White,
            modifier = Modifier.size(20.dp)
        )
    }
}

@Composable
fun RemoteServices(
    onNavigateToAirConditioner: () -> Unit = {}
) {
    Column(
        modifier = Modifier
            .fillMaxWidth()
            .height(120.dp)
            .background(colorResource(id = R.color.dark_gray))
            .padding(horizontal = 16.dp)
    ) {
        Text(
            text = "„É™„É¢„Éº„Éà„Çµ„Éº„Éì„Çπ",
            color = Color.White,
            fontSize = 18.sp,
            fontWeight = FontWeight.Bold,
            modifier = Modifier.padding(vertical = 8.dp)
        )
        
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceEvenly,
            verticalAlignment = Alignment.CenterVertically
        ) {
            // „Éè„Ç∂„Éº„Éâ„Éú„Çø„É≥
            RemoteServiceButton(
                icon = Icons.Default.Add,
                label = "„Éè„Ç∂„Éº„Éâ",
                onClick = { /* „Éè„Ç∂„Éº„ÉâÂà∂Âæ° */ }
            )
            
            // „Ç®„Ç¢„Ç≥„É≥„Éú„Çø„É≥
            RemoteServiceButton(
                icon = Icons.Default.Add,
                label = "„Ç®„Ç¢„Ç≥„É≥",
                onClick = onNavigateToAirConditioner
            )
            
            // „Ç´„Éº„Éï„Ç°„Ç§„É≥„ÉÄ„Éº„Éú„Çø„É≥
            RemoteServiceButton(
                icon = Icons.Default.Add,
                label = "„Ç´„Éº„Éï„Ç°„Ç§„É≥„ÉÄ„Éº",
                onClick = { /* „Ç´„Éº„Éï„Ç°„Ç§„É≥„ÉÄ„Éº */ }
            )
        }
    }
}

@Composable
fun RemoteServiceButton(
    icon: ImageVector,
    label: String,
    onClick: () -> Unit
) {
    Column(
        horizontalAlignment = Alignment.CenterHorizontally,
        verticalArrangement = Arrangement.Center
    ) {
        IconButton(
            onClick = onClick,
            modifier = Modifier
                .size(80.dp)
                .clip(CircleShape)
                .background(Color.Transparent)
        ) {
            Icon(
                imageVector = icon,
                contentDescription = label,
                tint = Color.White,
                modifier = Modifier.size(32.dp)
            )
        }
        Text(
            text = label,
            color = Color.White,
            fontSize = 12.sp,
            textAlign = TextAlign.Center
        )
    }
}

@Composable
fun BottomNavigation() {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .height(56.dp)
            .background(colorResource(id = R.color.dark_gray))
            .padding(horizontal = 16.dp),
        horizontalArrangement = Arrangement.SpaceEvenly,
        verticalAlignment = Alignment.CenterVertically
    ) {
        // „ÇØ„É´„Éû„Çø„ÉñÔºà„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÔºâ
        Column(
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Icon(
                imageVector = Icons.Default.Home,
                contentDescription = "„ÇØ„É´„Éû",
                tint = colorResource(id = R.color.toyota_red),
                modifier = Modifier.size(24.dp)
            )
            Text(
                text = "„ÇØ„É´„Éû",
                color = colorResource(id = R.color.toyota_red),
                fontSize = 12.sp
            )
        }
        
        // „ÅäÁü•„Çâ„Åõ„Çø„ÉñÔºàÈùû„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÔºâ
        Column(
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Icon(
                imageVector = Icons.Default.Add,
                contentDescription = "„ÅäÁü•„Çâ„Åõ",
                tint = Color.White,
                modifier = Modifier.size(24.dp)
            )
            Text(
                text = "„ÅäÁü•„Çâ„Åõ",
                color = Color.White,
                fontSize = 12.sp
            )
        }
    }
}

@Preview(showBackground = true)
@Composable
fun HomeScreenPreview() {
    DemoCursorAndroidTheme {
        HomeScreen()
    }
}
